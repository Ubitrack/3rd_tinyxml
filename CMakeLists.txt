cmake_minimum_required(VERSION 3.3)
set(TINYXML_LIBRARY tinyxml)

project(ubitrack_tinyxml CXX)

include(GNUInstallDirs)

# Version of TINYXML API.
SET( TINYXML_MAJOR_VERSION 2 )
SET( TINYXML_MINOR_VERSION 5 )
SET( TINYXML_BUILD_VERSION 3 )

SET(TINYXML_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")

# Version of project.
SET( TINYXML_FULL_VERSION ${TINYXML_MAJOR_VERSION}.${TINYXML_MINOR_VERSION}.${TINYXML_BUILD_VERSION} ) 

# All cpp files for TINYXML
FILE(GLOB TINYXML_SRCS RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
   "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp"
)

# All header files for TINYXML
FILE(GLOB TINYXML_HEADERS RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
   "${CMAKE_CURRENT_SOURCE_DIR}/include/*.h"  
)

# TINYXML shared library definition
ADD_LIBRARY(${TINYXML_LIBRARY} STATIC ${TINYXML_SRCS} ${TINYXML_HEADERS})

target_include_directories(${TINYXML_LIBRARY} PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
    PRIVATE src)

set_property(TARGET ${TINYXML_LIBRARY} PROPERTY COMPILE_DEFINITIONS TIXML_USE_STL)

# make the name of debug libraries end in _d.
set_property(TARGET  ${TINYXML_LIBRARY} PROPERTY DEBUG_POSTFIX "_d" )

# set the version of the library
set_property(TARGET  ${TINYXML_LIBRARY} PROPERTY VERSION ${TINYXML_FULL_VERSION} )

# set fPIC
set_property(TARGET ${TINYXML_LIBRARY} PROPERTY POSITION_INDEPENDENT_CODE ON)

if(WIN32)
  add_definitions("-D_LIB")
  add_definitions("-D_CRT_SECURE_NO_DEPRECATE")
endif(WIN32)

set_target_properties(${TINYXML_LIBRARY} PROPERTIES
        OUTPUT_NAME ${TINYXML_LIBRARY}
        ARCHIVE_OUTPUT_DIRECTORY lib
    )

install(TARGETS ${TINYXML_LIBRARY}
  EXPORT library_targets
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
 )

install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

install(EXPORT library_targets
  NAMESPACE ubitrack_tinyxml::
  DESTINATION lib/cmake/ubitrack_tinyxml)


